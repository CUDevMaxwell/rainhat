<?php

/**
 * @file
 * A module which allows Drupal node data to be saved in a Fedora
 * Repository. 
 */

/**
 * Implements hook_entity_info().
 */
function rainhat_entity_info() {

  $return['rainhat_fedora_connection'] = array(
    'label' => t('Fedora Repository Connection'),
    'controller class' => 'RainhatFedoraConnectionController',
    'base table' => 'rainhat_fedora_connection',
    'fieldable' => FALSE,
    'entity keys' => array(
      'id' => 'id',
      'label' => 'name',
    ),
  );
  
  $return['rainhat_node_export'] = array(
    'label' => t('Node Data Export'),
    'controller class' => 'RainhatNodeExportController',
    'base table' => 'rainhat_node_export',
    'fieldable' => FALSE,
    'entity keys' => array(
      'id' => 'id',
      'label' => 'name',
    ),
  );
    
  $return['rainhat_datastream'] = array(
    'label' => t('Datastream Definitions'),
    'controller class' => 'RainhatDatastreamController',
    'base table' => 'rainhat_datastream',
    'fieldable' => FALSE,
    'entity keys' => array(
      'id' => 'id',
      'label' => 'datastream_id',
    ),

  );
  return $return;
}

/**
 * Implement hook_menu().
 */
function rainhat_menu() {

  $items = array();

  //This is the settings admin menu item.
  //This is where module wide config settings are set.
  $items['admin/config/system/rainhat'] = array(
    'title' => 'Fedora Connection Defaults',    
    'access arguments' => array('administer rainhat'),    
    'description' => 'Set options for the rainhat module.',    
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rainhat_admin_form'),
    'file' => 'rainhat.moduleadmin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  //Fedora Connection Administration ----------------------------------------------------
  $items['admin/structure/fedora'] = array(
    'title' => 'Fedora Repository Connections and Node Export Settings',    
    'description' => 'Add, Edit, and Remove connections to Fedora Repositories and node data exports.',
    'page callback' => 'rainhat_fedoraconnection_list',
    'access arguments' => array('administer fedora connections node export'),
    'file' => 'rainhat.fedoraconnection.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/structure/fedora/connections'] = array(
    'title' => 'Connections',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/structure/fedora/connections/add'] = array(
    'title' => 'Add a Fedora Repository connection',
    'page callback' => 'rainhat_fedora_connection_add',
    'access arguments' => array('administer fedora connections node export'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'rainhat.fedoraconnection.inc',
  );
  $items['admin/structure/fedora/connections/%rainhat_fedora_connection/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rainhat_fedora_connection_form', 4),
    'access arguments' => array('administer fedora connections node export'),
    'type' => MENU_CALLBACK,
    'file' => 'rainhat.fedoraconnection.inc',
  );
  $items['admin/structure/fedora/connections/%rainhat_fedora_connection/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rainhat_fedora_connection_delete', 4),
    'access arguments' => array('administer fedora connections node export'),
    'type' => MENU_CALLBACK,
    'file' => 'rainhat.fedoraconnection.inc',
  );
  
  //Node Export Administration ----------------------------------------------------------
  $items['admin/structure/fedora/nodeexport'] = array(
    'title' => 'Node Exports',
    'access arguments' => array('administer fedora connections node export'),
    'page callback' => 'rainhat_node_export_list',
    'file' => 'rainhat.nodeexport.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );
  $items['admin/structure/fedora/nodeexport/add'] = array(
    'title' => 'New Node Export',
    'page callback' => 'rainhat_node_export_add',
    'access arguments' => array('administer fedora connections node export'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'rainhat.nodeexport.inc',
  );
  $items['admin/structure/fedora/nodeexport/%rainhat_node_export/edit'] = array(
    'title' => 'Edit a Node Export',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rainhat_node_export_form', 4),
    'access arguments' => array('administer fedora connections node export'),
    'type' => MENU_CALLBACK,
    'file' => 'rainhat.nodeexport.inc',
  );
  $items['admin/structure/fedora/nodeexport/%rainhat_node_export/delete'] = array(
    'title' => 'Delete a Node Export',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rainhat_node_export_delete', 4),
    'access arguments' => array('administer fedora connections node export'),
    'type' => MENU_CALLBACK,
    'file' => 'rainhat.nodeexport.inc',
  );
  
  //Datastream Administration -----------------------------------------------------------
  $items['admin/structure/fedora/datastreams/%rainhat_node_export/add'] = array(
    'title' => 'Add a New Datastream Definition to a Node Export',
    'page callback' => 'rainhat_datastream_add',
    'page arguments' => array(4),
    'access arguments' => array('administer fedora connections node export'),
    'type' => MENU_CALLBACK,
    'file' => 'rainhat.datastream.inc',
  );
  $items['admin/structure/fedora/datastreams/%rainhat_datastream/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rainhat_datastream_form', 4),
    'access arguments' => array('administer fedora connections node export'),
    'type' => MENU_CALLBACK,
    'file' => 'rainhat.datastream.inc',
  );
  $items['admin/structure/fedora/datastreams/%rainhat_datastream/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rainhat_datastream_delete', 4),
    'access arguments' => array('administer fedora connections node export'),
    'type' => MENU_CALLBACK,
    'file' => 'rainhat.datastream.inc',
  );
  
  return $items;

}

/**
 * Implement hook_permission().
 */
function rainhat_permission() {

  $permissions = array();

  $permissions['administer rainhat'] = array(
    'title' => t('Administer the Rainhat module defaults.'),
    'description' => t('Change the Fedora Connection defaults for the Rainhat Module.'),
    'restrict access' => TRUE,
  );

  $permissions['administer fedora connections node export'] = array(
    'title' => t('Administer Fedora Repository Connections and Node Exports.'),
    'description' => t('Add, Edit, and Remove connections to Fedora Repositories and the node export settings used to load the data into Fedora.'),
    'restrict access' => TRUE,
  );

  return $permissions;

}

/**
 * Menu load callback for connections.
 */
function rainhat_fedora_connection_load($id) {
  $fedora_connections = entity_load('rainhat_fedora_connection', array($id));
  return reset($fedora_connections);
}

/**
 * Menu load callback for node exports.
 */
function rainhat_node_export_load($id) {
  $node_exports = entity_load('rainhat_node_export', array($id));
  return reset($node_exports);
}

/**
 * Menu load callback for datastreams.
 */
function rainhat_datastream_load($id) {
  $datastreams = entity_load('rainhat_datastream', array($id));
  return reset($datastreams);
}


/**
 * Implements hook_node_insert()
 * 
 * This hook runs after a node is saved into the database.
 */
/*
function rainhat_node_insert($node){
  
  //Load the node export entities  
  $transformations = entity_load('rainhat_transformation');
  foreach ($transformations as $id => $transformation) {
    //Check to see if the node is one of the `hooked` node types
    if ($node->type == $transformation->hooked_type){
      
      //Get the parent fedora connection data
      $connection = db_select('rainhat_fedora_connection', 'f')
      ->fields('f')
      ->condition('id', $transformation->parent_fedora_connection_id)
      ->execute()
      ->fetchObject();
      
      //Create the fedora connection
      $fc = new FedoraConnection($connection->url, $connection->admin_username, $connection->admin_password);
      
      //Check to see if the node has a pid attached to it yet
      $pid = "";
      
      $nid_to_pid = db_select('rainhat_nid_to_pid', 'f')
      ->fields('f')
      ->condition('parent_transformation_id', $id)
      ->condition('nid', $node->nid)
      ->execute()
      ->fetchObject();
                  
      if(empty($nid_to_pid)){
        $pid = $fc->createNewEmptyObject('new', $transformation->pid_prefix, $node->title)->data;
        $new_row = array('nid'=>$node->nid, 'pid'=>$pid, 'parent_transformation_id'=>$id);
        drupal_write_record('rainhat_nid_to_pid',  $new_row);
        if (user_access('administer fedora connections node export')) {
          drupal_set_message(t('Nid: @nid is mapped to Pid: @pid.', array('@nid' => $node->nid, '@pid' => $pid)));
        }
      } 
      else{
        $pid = $nid_to_pid->pid;        
      }      
      
      //Go through the datastreams for the particular transformation, and run them.
      $datastreams = db_select('rainhat_datastream', 'f')
      ->fields('f')
      ->condition('parent_transformation_id', $id)
      ->execute();
      
      foreach ($datastreams as $datastream){   
        if($datastream->type == 'XML'){
          if (user_access('administer fedora connections node export')) {
            dpm($datastream->php_script);
          }
          $new_datastream = eval($datastream->php_script);
          $fc->addDatastream($pid, $datastream->datastream_id, 'X', $datastream->datastream_id, $new_datastream);  
        }
      }
    }
  }
}
*/


